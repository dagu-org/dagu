---
swagger: "2.0"
info:
  version: "0.0.1" # バージョンは据え置きで互換性維持
  title: "Dagu"
  contact:
    name: "Dagu"
  description: >
    Dagu is a compact, portable workflow engine implemented in Go. It provides
    a declarative model for orchestrating command execution across diverse
    environments, including shell scripts, Python commands, containerized
    operations, or remote commands.
basePath: "/api/v1"
host: "localhost:8080"
schemes:
  - "http"
consumes:
  - "application/json"
produces:
  - "application/json"

tags:
  - name: "dags"
    description: "Operations about DAGs"

paths:
  /dags:
    get:
      summary: "List all DAGs"
      description: "Returns a list of DAGs with optional pagination and search filters."
      operationId: "listDags"
      tags:
        - "dags"
      parameters:
        - name: "page"
          in: "query"
          required: false
          type: "integer"
          description: "Page number (for pagination)."
        - name: "limit"
          in: "query"
          required: false
          type: "integer"
          description: "Number of items to return per page."
        - name: "searchName"
          in: "query"
          required: false
          type: "string"
          description: "Filter DAGs by matching name."
        - name: "searchTag"
          in: "query"
          required: false
          type: "string"
          description: "Filter DAGs by matching tag."
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/listDagsResponse"
        default:
          description: "Generic error response."
          schema:
            $ref: "#/definitions/ApiError"

    post:
      summary: "Create a new DAG"
      description: "Creates a new DAG."
      operationId: "createDag"
      tags:
        - "dags"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/createDagRequest"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/createDagResponse"
        default:
          description: "Generic error response."
          schema:
            $ref: "#/definitions/ApiError"

  /dags/{dagId}:
    get:
      summary: "Get DAG details"
      description: "Returns details of a DAG, including files, logs, etc."
      operationId: "getDagDetails"
      tags:
        - "dags"
      parameters:
        - name: "dagId"
          in: "path"
          required: true
          type: "string"
          description: "The ID of the DAG."
        - name: "tab"
          in: "query"
          required: false
          type: "string"
          description: "Tab name for UI navigation."
        - name: "file"
          in: "query"
          required: false
          type: "string"
          description: "Specific file related to the DAG."
        - name: "step"
          in: "query"
          required: false
          type: "string"
          description: "Step name within the DAG."
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/getDagDetailsResponse"
        default:
          description: "Generic error response."
          schema:
            $ref: "#/definitions/ApiError"

    post:
      summary: "Perform an action on a DAG"
      description: "Performs a specified action (e.g., start, stop) on the given DAG."
      operationId: "postDagAction"
      tags:
        - "dags"
      parameters:
        - name: "dagId"
          in: "path"
          required: true
          type: "string"
          description: "The ID of the DAG."
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/postDagActionRequest"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/postDagActionResponse"
        default:
          description: "Generic error response."
          schema:
            $ref: "#/definitions/ApiError"

    delete:
      summary: "Delete a DAG"
      description: "Deletes a DAG by its ID."
      operationId: "deleteDag"
      tags:
        - "dags"
      parameters:
        - name: "dagId"
          in: "path"
          required: true
          type: "string"
          description: "The ID of the DAG."
      responses:
        "200":
          description: "A successful response."
        default:
          description: "Generic error response."
          schema:
            $ref: "#/definitions/ApiError"

  /search:
    get:
      summary: "Search DAGs"
      description: "Searches for DAGs based on a query string."
      operationId: "searchDags"
      tags:
        - "dags"
      parameters:
        - name: "q"
          in: "query"
          required: true
          type: "string"
          description: "A search query string."
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/searchDagsResponse"
        default:
          description: "Generic error response."
          schema:
            $ref: "#/definitions/ApiError"

  /tags:
    get:
      summary: "List all tags"
      description: "Returns a list of tags used in DAGs."
      operationId: "listTags"
      tags:
        - "dags"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/listTagResponse"
        default:
          description: "Generic error response."
          schema:
            $ref: "#/definitions/ApiError"

definitions:
  ################################################################
  # Common / Error
  ################################################################
  ApiError:
    type: object
    properties:
      message:
        type: string
        description: "Short error message."
      detailedMessage:
        type: string
        description: "Detailed error description."
    required:
      - message
      - detailedMessage

  ################################################################
  # Requests
  ################################################################
  createDagRequest:
    type: object
    description: "Request body for creating a DAG."
    properties:
      action:
        type: string
        description: "Action to perform upon creation (if any)."
      value:
        type: string
        description: "Associated value for the action."
    required:
      - action
      - value

  postDagActionRequest:
    type: object
    description: "Request body for posting an action to a DAG."
    properties:
      action:
        type: string
        enum:
          - start
          - suspend
          - stop
          - retry
          - mark-success
          - mark-failed
          - save
          - rename
        description: "Action to be performed on the DAG."
      value:
        type: string
        description: "Optional extra value for the action."
      requestId:
        type: string
        description: "Unique request ID for the action."
      step:
        type: string
        description: "Step name if the action targets a specific step."
      params:
        type: string
        description: "Additional parameters for the action."
    required:
      - action

  ################################################################
  # Responses
  ################################################################
  listDagsResponse:
    type: object
    properties:
      DAGs:
        type: array
        items:
          $ref: "#/definitions/dagListItem"
      Errors:
        type: array
        items:
          type: string
      HasError:
        type: boolean
      PageCount:
        type: integer
    required:
      - DAGs
      - Errors
      - HasError
      - PageCount

  createDagResponse:
    type: object
    properties:
      DagID:
        type: string
    required:
      - DagID

  getDagDetailsResponse:
    type: object
    properties:
      Title:
        type: string
      DAG:
        $ref: "#/definitions/dagStatusWithDetails"
      Tab:
        type: string
      Graph:
        type: string
      Definition:
        type: string
      LogData:
        $ref: "#/definitions/dagLogResponse"
      LogUrl:
        type: string
      StepLog:
        $ref: "#/definitions/dagStepLogResponse"
      ScLog:
        $ref: "#/definitions/dagSchedulerLogResponse"
      Errors:
        type: array
        items:
          type: string
    required:
      - Title
      - DAG
      - Tab
      - Graph
      - Definition
      - LogData
      - LogUrl
      - StepLog
      - ScLog
      - Errors

  postDagActionResponse:
    type: object
    properties:
      NewDagID:
        type: string
        description: "New DAG ID, if the action triggered a DAG rename or duplication."

  ################################################################
  # DAG List / Status / Detail
  ################################################################
  dagListItem:
    type: object
    properties:
      File:
        type: string
      Dir:
        type: string
      DAG:
        $ref: "#/definitions/dag"
      Status:
        $ref: "#/definitions/dagStatus"
      Suspended:
        type: boolean
      Error:
        type: string
      ErrorT:
        type: string
    required:
      - File
      - Dir
      - DAG
      - Status
      - Suspended
      - Error
      - ErrorT

  dag:
    type: object
    properties:
      Group:
        type: string
      Name:
        type: string
      Schedule:
        type: array
        items:
          $ref: "#/definitions/schedule"
      Description:
        type: string
      Params:
        type: array
        items:
          type: string
      DefaultParams:
        type: string
      Tags:
        type: array
        items:
          type: string
    required:
      - Group
      - Name
      - Schedule
      - Description
      - Params
      - DefaultParams
      - Tags

  schedule:
    type: object
    properties:
      Expression:
        type: string
    required:
      - Expression

  dagStatus:
    type: object
    properties:
      RequestId:
        type: string
      Name:
        type: string
      Status:
        type: integer
      StatusText:
        type: string
      Pid:
        type: integer
      StartedAt:
        type: string
        description: "Timestamp when the DAG started."
      FinishedAt:
        type: string
        description: "Timestamp when the DAG finished."
      Log:
        type: string
      Params:
        type: string
    required:
      - RequestId
      - Name
      - Status
      - StatusText
      - Pid
      - StartedAt
      - FinishedAt
      - Log
      - Params

  dagStatusWithDetails:
    type: object
    properties:
      File:
        type: string
      Dir:
        type: string
      DAG:
        $ref: "#/definitions/dagDetail"
      Status:
        $ref: "#/definitions/dagStatusDetail"
      Suspended:
        type: boolean
      Error:
        type: string
      ErrorT:
        type: string
    required:
      - File
      - Dir
      - DAG
      - Status
      - Suspended
      - Error
      - ErrorT

  dagDetail:
    type: object
    properties:
      Location:
        type: string
      Group:
        type: string
      Name:
        type: string
      Schedule:
        type: array
        items:
          $ref: "#/definitions/schedule"
      Description:
        type: string
      Env:
        type: array
        items:
          type: string
      LogDir:
        type: string
      HandlerOn:
        $ref: "#/definitions/handlerOn"
      Steps:
        type: array
        items:
          $ref: "#/definitions/stepObject"
      Delay:
        type: integer
      HistRetentionDays:
        type: integer
      Preconditions:
        type: array
        items:
          $ref: "#/definitions/condition"
      MaxActiveRuns:
        type: integer
      Params:
        type: array
        items:
          type: string
      DefaultParams:
        type: string
      Tags:
        type: array
        items:
          type: string
    required:
      - Location
      - Group
      - Name
      - Schedule
      - Description
      - Env
      - LogDir
      - HandlerOn
      - Steps
      - Delay
      - HistRetentionDays
      - Preconditions
      - MaxActiveRuns
      - Params
      - DefaultParams
      - Tags

  handlerOn:
    type: object
    properties:
      Failure:
        $ref: "#/definitions/stepObject"
      Success:
        $ref: "#/definitions/stepObject"
      Cancel:
        $ref: "#/definitions/stepObject"
      Exit:
        $ref: "#/definitions/stepObject"

  dagStatusDetail:
    type: object
    properties:
      RequestId:
        type: string
      Name:
        type: string
      Status:
        type: integer
      StatusText:
        type: string
      Pid:
        type: integer
      Nodes:
        type: array
        items:
          $ref: "#/definitions/statusNode"
      OnExit:
        $ref: "#/definitions/statusNode"
      OnSuccess:
        $ref: "#/definitions/statusNode"
      OnFailure:
        $ref: "#/definitions/statusNode"
      OnCancel:
        $ref: "#/definitions/statusNode"
      StartedAt:
        type: string
        description: "Timestamp when the DAG started."
      FinishedAt:
        type: string
        description: "Timestamp when the DAG finished."
      Log:
        type: string
      Params:
        type: string
    required:
      - RequestId
      - Name
      - Status
      - StatusText
      - Pid
      - Nodes
      - OnExit
      - OnSuccess
      - OnFailure
      - OnCancel
      - StartedAt
      - FinishedAt
      - Log
      - Params

  statusNode:
    type: object
    properties:
      Step:
        $ref: "#/definitions/stepObject"
      Log:
        type: string
      StartedAt:
        type: string
        description: "Timestamp when the step started."
      FinishedAt:
        type: string
        description: "Timestamp when the step finished."
      Status:
        type: integer
      RetryCount:
        type: integer
      DoneCount:
        type: integer
      Error:
        type: string
      StatusText:
        type: string
    required:
      - Step
      - Log
      - StartedAt
      - FinishedAt
      - Status
      - RetryCount
      - DoneCount
      - Error
      - StatusText

  stepObject:
    type: object
    properties:
      Name:
        type: string
      Description:
        type: string
      Variables:
        type: array
        items:
          type: string
      Dir:
        type: string
      CmdWithArgs:
        type: string
      Command:
        type: string
      Script:
        type: string
      Stdout:
        type: string
      Stderr:
        type: string
      Output:
        type: string
      Args:
        type: array
        items:
          type: string
      Run:
        type: string
      Params:
        type: string
      Depends:
        type: array
        items:
          type: string
      RepeatPolicy:
        $ref: "#/definitions/repeatPolicy"
      MailOnError:
        type: boolean
      Preconditions:
        type: array
        items:
          $ref: "#/definitions/condition"
    required:
      - Name
      - Description
      - Variables
      - Dir
      - CmdWithArgs
      - Command
      - Script
      - Stdout
      - Stderr
      - Output
      - Args
      - Depends
      - RepeatPolicy
      - MailOnError
      - Preconditions

  ################################################################
  # Search
  ################################################################
  searchDagsResponse:
    type: object
    properties:
      Results:
        type: array
        items:
          $ref: "#/definitions/searchDagsResultItem"
      Errors:
        type: array
        items:
          type: string
    required:
      - Results
      - Errors

  searchDagsResultItem:
    type: object
    properties:
      Name:
        type: string
      DAG:
        $ref: "#/definitions/dag"
      Matches:
        type: array
        items:
          $ref: "#/definitions/searchDagsMatchItem"

  searchDagsMatchItem:
    type: object
    properties:
      Line:
        type: string
      LineNumber:
        type: integer
      StartLine:
        type: integer

  ################################################################
  # Logging
  ################################################################
  dagStepLogResponse:
    type: object
    properties:
      Step:
        $ref: "#/definitions/statusNode"
      LogFile:
        type: string
      Content:
        type: string
    required:
      - Step
      - LogFile
      - Content

  dagSchedulerLogResponse:
    type: object
    properties:
      LogFile:
        type: string
      Content:
        type: string
    required:
      - LogFile
      - Content

  dagLogResponse:
    type: object
    properties:
      GridData:
        type: array
        items:
          $ref: "#/definitions/dagLogGridItem"
      Logs:
        type: array
        items:
          $ref: "#/definitions/dagStatusFile"
    required:
      - GridData
      - Logs

  dagLogGridItem:
    type: object
    properties:
      Name:
        type: string
      Vals:
        type: array
        items:
          type: integer
    required:
      - Name
      - Vals

  dagStatusFile:
    type: object
    properties:
      File:
        type: string
      Status:
        $ref: "#/definitions/dagStatusDetail"
    required:
      - File
      - Status

  ################################################################
  # Other
  ################################################################
  condition:
    type: object
    properties:
      Condition:
        type: string
      Expected:
        type: string

  repeatPolicy:
    type: object
    properties:
      Repeat:
        type: boolean
      Interval:
        type: integer

  listTagResponse:
    type: object
    properties:
      Tags:
        type: array
        items:
          type: string
      Errors:
        type: array
        items:
          type: string
    required:
      - Tags
      - Errors

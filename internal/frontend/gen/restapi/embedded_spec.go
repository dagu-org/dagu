// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "REST API for Dagu - a compact, portable workflow engine for orchestrating  command execution across diverse environments including shell scripts,  Python commands, containerized operations, and remote commands.\n",
    "title": "Dagu",
    "contact": {
      "name": "Dagu",
      "url": "https://github.com/dagu-org/dagu"
    },
    "license": {
      "name": "GPL-3.0",
      "url": "https://github.com/dagu-org/dagu/blob/main/LICENSE.md"
    },
    "version": "0.0.1"
  },
  "host": "localhost:8080",
  "basePath": "/api/v1",
  "paths": {
    "/dags": {
      "get": {
        "description": "Returns a list of DAGs with optional pagination and search filters.",
        "tags": [
          "dags"
        ],
        "summary": "List all DAGs",
        "operationId": "listDags",
        "parameters": [
          {
            "type": "integer",
            "description": "Page number (for pagination).",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Number of items to return per page.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter DAGs by matching name.",
            "name": "searchName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter DAGs by matching tag.",
            "name": "searchTag",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListDagsResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "Creates a new DAG.",
        "tags": [
          "dags"
        ],
        "summary": "Create a new DAG",
        "operationId": "createDag",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDagRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateDagResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/dags/{dagId}": {
      "get": {
        "description": "Returns details of a DAG, including files, logs, etc.",
        "tags": [
          "dags"
        ],
        "summary": "Get DAG details",
        "operationId": "getDagDetails",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the DAG.",
            "name": "dagId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Tab name for UI navigation.",
            "name": "tab",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Specific file related to the DAG.",
            "name": "file",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Step name within the DAG.",
            "name": "step",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetDagDetailsResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "Performs a specified action (e.g., start, stop) on the given DAG.",
        "tags": [
          "dags"
        ],
        "summary": "Perform an action on a DAG",
        "operationId": "postDagAction",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the DAG.",
            "name": "dagId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostDagActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/PostDagActionResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a DAG by its ID.",
        "tags": [
          "dags"
        ],
        "summary": "Delete a DAG",
        "operationId": "deleteDag",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the DAG.",
            "name": "dagId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/search": {
      "get": {
        "description": "Searches for DAGs based on a query string.",
        "tags": [
          "dags"
        ],
        "summary": "Search DAGs",
        "operationId": "searchDags",
        "parameters": [
          {
            "type": "string",
            "description": "A search query string.",
            "name": "q",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SearchDAGsResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tags": {
      "get": {
        "description": "Returns a list of tags used in DAGs.",
        "tags": [
          "dags"
        ],
        "summary": "List all tags",
        "operationId": "listTags",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListTagResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Condition": {
      "type": "object",
      "properties": {
        "Condition": {
          "type": "string"
        },
        "Expected": {
          "type": "string"
        }
      }
    },
    "CreateDagRequest": {
      "description": "Request body for creating a DAG.",
      "type": "object",
      "required": [
        "action",
        "value"
      ],
      "properties": {
        "action": {
          "description": "Action to perform upon creation (if any).",
          "type": "string"
        },
        "value": {
          "description": "Associated value for the action.",
          "type": "string"
        }
      }
    },
    "CreateDagResponse": {
      "type": "object",
      "required": [
        "DagID"
      ],
      "properties": {
        "DagID": {
          "type": "string"
        }
      }
    },
    "DAG": {
      "type": "object",
      "required": [
        "Group",
        "Name",
        "Schedule",
        "Description",
        "Params",
        "DefaultParams",
        "Tags"
      ],
      "properties": {
        "DefaultParams": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Group": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Params": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Schedule": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Schedule"
          }
        },
        "Tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DAGDetails": {
      "type": "object",
      "required": [
        "Location",
        "Group",
        "Name",
        "Schedule",
        "Description",
        "Env",
        "LogDir",
        "HandlerOn",
        "Steps",
        "Delay",
        "HistRetentionDays",
        "Preconditions",
        "MaxActiveRuns",
        "Params",
        "DefaultParams",
        "Tags"
      ],
      "properties": {
        "DefaultParams": {
          "type": "string"
        },
        "Delay": {
          "type": "integer"
        },
        "Description": {
          "type": "string"
        },
        "Env": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Group": {
          "type": "string"
        },
        "HandlerOn": {
          "$ref": "#/definitions/HandlerOn"
        },
        "HistRetentionDays": {
          "type": "integer"
        },
        "Location": {
          "type": "string"
        },
        "LogDir": {
          "type": "string"
        },
        "MaxActiveRuns": {
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Params": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Preconditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Condition"
          }
        },
        "Schedule": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Schedule"
          }
        },
        "Steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/stepObject"
          }
        },
        "Tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DAGLogData": {
      "type": "object",
      "required": [
        "GridData",
        "Logs"
      ],
      "properties": {
        "GridData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DAGLogGridItem"
          }
        },
        "Logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DAGLogStatusFile"
          }
        }
      }
    },
    "DAGLogGridItem": {
      "type": "object",
      "required": [
        "Name",
        "Vals"
      ],
      "properties": {
        "Name": {
          "type": "string"
        },
        "Vals": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "DAGLogStatusFile": {
      "type": "object",
      "required": [
        "File",
        "Status"
      ],
      "properties": {
        "File": {
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/DAGStatusDetails"
        }
      }
    },
    "DAGStatus": {
      "type": "object",
      "required": [
        "RequestId",
        "Name",
        "Status",
        "StatusText",
        "Pid",
        "StartedAt",
        "FinishedAt",
        "Log",
        "Params"
      ],
      "properties": {
        "FinishedAt": {
          "description": "Timestamp when the DAG finished.",
          "type": "string"
        },
        "Log": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Params": {
          "type": "string"
        },
        "Pid": {
          "type": "integer"
        },
        "RequestId": {
          "type": "string"
        },
        "StartedAt": {
          "description": "Timestamp when the DAG started.",
          "type": "string"
        },
        "Status": {
          "type": "integer"
        },
        "StatusText": {
          "type": "string"
        }
      }
    },
    "DAGStatusDetails": {
      "type": "object",
      "required": [
        "RequestId",
        "Name",
        "Status",
        "StatusText",
        "Pid",
        "Nodes",
        "OnExit",
        "OnSuccess",
        "OnFailure",
        "OnCancel",
        "StartedAt",
        "FinishedAt",
        "Log",
        "Params"
      ],
      "properties": {
        "FinishedAt": {
          "description": "Timestamp when the DAG finished.",
          "type": "string"
        },
        "Log": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Node"
          }
        },
        "OnCancel": {
          "$ref": "#/definitions/Node"
        },
        "OnExit": {
          "$ref": "#/definitions/Node"
        },
        "OnFailure": {
          "$ref": "#/definitions/Node"
        },
        "OnSuccess": {
          "$ref": "#/definitions/Node"
        },
        "Params": {
          "type": "string"
        },
        "Pid": {
          "type": "integer"
        },
        "RequestId": {
          "type": "string"
        },
        "StartedAt": {
          "description": "Timestamp when the DAG started.",
          "type": "string"
        },
        "Status": {
          "type": "integer"
        },
        "StatusText": {
          "type": "string"
        }
      }
    },
    "DAGStatusFile": {
      "type": "object",
      "required": [
        "File",
        "Dir",
        "DAG",
        "Status",
        "Suspended",
        "Error",
        "ErrorT"
      ],
      "properties": {
        "DAG": {
          "$ref": "#/definitions/DAG"
        },
        "Dir": {
          "type": "string"
        },
        "Error": {
          "type": "string"
        },
        "ErrorT": {
          "type": "string"
        },
        "File": {
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/DAGStatus"
        },
        "Suspended": {
          "type": "boolean"
        }
      }
    },
    "DAGStatusFileDetails": {
      "type": "object",
      "required": [
        "File",
        "Dir",
        "DAG",
        "Status",
        "Suspended",
        "Error",
        "ErrorT"
      ],
      "properties": {
        "DAG": {
          "$ref": "#/definitions/DAGDetails"
        },
        "Dir": {
          "type": "string"
        },
        "Error": {
          "type": "string"
        },
        "ErrorT": {
          "type": "string"
        },
        "File": {
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/DAGStatusDetails"
        },
        "Suspended": {
          "type": "boolean"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "validation_error",
            "not_found",
            "internal_error",
            "unauthorized",
            "bad_gateway"
          ]
        },
        "details": {
          "description": "Additional error details.",
          "type": "object"
        },
        "message": {
          "description": "Short error message.",
          "type": "string"
        }
      }
    },
    "GetDagDetailsResponse": {
      "type": "object",
      "required": [
        "Title",
        "DAG",
        "Tab",
        "Graph",
        "Definition",
        "LogData",
        "LogUrl",
        "StepLog",
        "ScLog",
        "Errors"
      ],
      "properties": {
        "DAG": {
          "$ref": "#/definitions/DAGStatusFileDetails"
        },
        "Definition": {
          "type": "string"
        },
        "Errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Graph": {
          "type": "string"
        },
        "LogData": {
          "$ref": "#/definitions/DAGLogData"
        },
        "LogUrl": {
          "type": "string"
        },
        "ScLog": {
          "$ref": "#/definitions/SchedulerLog"
        },
        "StepLog": {
          "$ref": "#/definitions/StepLog"
        },
        "Tab": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        }
      }
    },
    "HandlerOn": {
      "type": "object",
      "properties": {
        "Cancel": {
          "$ref": "#/definitions/stepObject"
        },
        "Exit": {
          "$ref": "#/definitions/stepObject"
        },
        "Failure": {
          "$ref": "#/definitions/stepObject"
        },
        "Success": {
          "$ref": "#/definitions/stepObject"
        }
      }
    },
    "ListDagsResponse": {
      "type": "object",
      "required": [
        "DAGs",
        "Errors",
        "HasError",
        "PageCount"
      ],
      "properties": {
        "DAGs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DAGStatusFile"
          }
        },
        "Errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "HasError": {
          "type": "boolean"
        },
        "PageCount": {
          "type": "integer"
        }
      }
    },
    "ListTagResponse": {
      "type": "object",
      "required": [
        "Tags",
        "Errors"
      ],
      "properties": {
        "Errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Node": {
      "type": "object",
      "required": [
        "Step",
        "Log",
        "StartedAt",
        "FinishedAt",
        "Status",
        "RetryCount",
        "DoneCount",
        "Error",
        "StatusText"
      ],
      "properties": {
        "DoneCount": {
          "type": "integer"
        },
        "Error": {
          "type": "string"
        },
        "FinishedAt": {
          "description": "Timestamp when the step finished.",
          "type": "string"
        },
        "Log": {
          "type": "string"
        },
        "RetryCount": {
          "type": "integer"
        },
        "StartedAt": {
          "description": "Timestamp when the step started.",
          "type": "string"
        },
        "Status": {
          "type": "integer"
        },
        "StatusText": {
          "type": "string"
        },
        "Step": {
          "$ref": "#/definitions/stepObject"
        }
      }
    },
    "PostDagActionRequest": {
      "description": "Request body for posting an action to a DAG.",
      "type": "object",
      "required": [
        "action"
      ],
      "properties": {
        "action": {
          "description": "Action to be performed on the DAG.",
          "type": "string",
          "enum": [
            "start",
            "suspend",
            "stop",
            "retry",
            "mark-success",
            "mark-failed",
            "save",
            "rename"
          ]
        },
        "params": {
          "description": "Additional parameters for the action.",
          "type": "string"
        },
        "requestId": {
          "description": "Unique request ID for the action.",
          "type": "string"
        },
        "step": {
          "description": "Step name if the action targets a specific step.",
          "type": "string"
        },
        "value": {
          "description": "Optional extra value for the action.",
          "type": "string"
        }
      }
    },
    "PostDagActionResponse": {
      "type": "object",
      "properties": {
        "NewDagID": {
          "description": "New DAG ID, if the action triggered a DAG rename or duplication.",
          "type": "string"
        }
      }
    },
    "RepeatPolicy": {
      "type": "object",
      "properties": {
        "Interval": {
          "type": "integer"
        },
        "Repeat": {
          "type": "boolean"
        }
      }
    },
    "Schedule": {
      "type": "object",
      "required": [
        "Expression"
      ],
      "properties": {
        "Expression": {
          "type": "string"
        }
      }
    },
    "SchedulerLog": {
      "type": "object",
      "required": [
        "LogFile",
        "Content"
      ],
      "properties": {
        "Content": {
          "type": "string"
        },
        "LogFile": {
          "type": "string"
        }
      }
    },
    "SearchDAGsMatchItem": {
      "type": "object",
      "properties": {
        "Line": {
          "type": "string"
        },
        "LineNumber": {
          "type": "integer"
        },
        "StartLine": {
          "type": "integer"
        }
      }
    },
    "SearchDAGsResponse": {
      "type": "object",
      "required": [
        "Results",
        "Errors"
      ],
      "properties": {
        "Errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchDAGsResultItem"
          }
        }
      }
    },
    "SearchDAGsResultItem": {
      "type": "object",
      "properties": {
        "DAG": {
          "$ref": "#/definitions/DAG"
        },
        "Matches": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchDAGsMatchItem"
          }
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "StepLog": {
      "type": "object",
      "required": [
        "Step",
        "LogFile",
        "Content"
      ],
      "properties": {
        "Content": {
          "type": "string"
        },
        "LogFile": {
          "type": "string"
        },
        "Step": {
          "$ref": "#/definitions/Node"
        }
      }
    },
    "stepObject": {
      "type": "object",
      "required": [
        "Name",
        "Description",
        "Variables",
        "Dir",
        "CmdWithArgs",
        "Command",
        "Script",
        "Stdout",
        "Stderr",
        "Output",
        "Args",
        "Depends",
        "RepeatPolicy",
        "MailOnError",
        "Preconditions"
      ],
      "properties": {
        "Args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CmdWithArgs": {
          "type": "string"
        },
        "Command": {
          "type": "string"
        },
        "Depends": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Description": {
          "type": "string"
        },
        "Dir": {
          "type": "string"
        },
        "MailOnError": {
          "type": "boolean"
        },
        "Name": {
          "type": "string"
        },
        "Output": {
          "type": "string"
        },
        "Params": {
          "type": "string"
        },
        "Preconditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Condition"
          }
        },
        "RepeatPolicy": {
          "$ref": "#/definitions/RepeatPolicy"
        },
        "Run": {
          "type": "string"
        },
        "Script": {
          "type": "string"
        },
        "Stderr": {
          "type": "string"
        },
        "Stdout": {
          "type": "string"
        },
        "Variables": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "tags": [
    {
      "description": "Operations about DAGs",
      "name": "dags"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "REST API for Dagu - a compact, portable workflow engine for orchestrating  command execution across diverse environments including shell scripts,  Python commands, containerized operations, and remote commands.\n",
    "title": "Dagu",
    "contact": {
      "name": "Dagu",
      "url": "https://github.com/dagu-org/dagu"
    },
    "license": {
      "name": "GPL-3.0",
      "url": "https://github.com/dagu-org/dagu/blob/main/LICENSE.md"
    },
    "version": "0.0.1"
  },
  "host": "localhost:8080",
  "basePath": "/api/v1",
  "paths": {
    "/dags": {
      "get": {
        "description": "Returns a list of DAGs with optional pagination and search filters.",
        "tags": [
          "dags"
        ],
        "summary": "List all DAGs",
        "operationId": "listDags",
        "parameters": [
          {
            "type": "integer",
            "description": "Page number (for pagination).",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Number of items to return per page.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter DAGs by matching name.",
            "name": "searchName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter DAGs by matching tag.",
            "name": "searchTag",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListDagsResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "Creates a new DAG.",
        "tags": [
          "dags"
        ],
        "summary": "Create a new DAG",
        "operationId": "createDag",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDagRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateDagResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/dags/{dagId}": {
      "get": {
        "description": "Returns details of a DAG, including files, logs, etc.",
        "tags": [
          "dags"
        ],
        "summary": "Get DAG details",
        "operationId": "getDagDetails",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the DAG.",
            "name": "dagId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Tab name for UI navigation.",
            "name": "tab",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Specific file related to the DAG.",
            "name": "file",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Step name within the DAG.",
            "name": "step",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetDagDetailsResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "Performs a specified action (e.g., start, stop) on the given DAG.",
        "tags": [
          "dags"
        ],
        "summary": "Perform an action on a DAG",
        "operationId": "postDagAction",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the DAG.",
            "name": "dagId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostDagActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/PostDagActionResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a DAG by its ID.",
        "tags": [
          "dags"
        ],
        "summary": "Delete a DAG",
        "operationId": "deleteDag",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the DAG.",
            "name": "dagId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/search": {
      "get": {
        "description": "Searches for DAGs based on a query string.",
        "tags": [
          "dags"
        ],
        "summary": "Search DAGs",
        "operationId": "searchDags",
        "parameters": [
          {
            "type": "string",
            "description": "A search query string.",
            "name": "q",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SearchDAGsResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tags": {
      "get": {
        "description": "Returns a list of tags used in DAGs.",
        "tags": [
          "dags"
        ],
        "summary": "List all tags",
        "operationId": "listTags",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListTagResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Condition": {
      "type": "object",
      "properties": {
        "Condition": {
          "type": "string"
        },
        "Expected": {
          "type": "string"
        }
      }
    },
    "CreateDagRequest": {
      "description": "Request body for creating a DAG.",
      "type": "object",
      "required": [
        "action",
        "value"
      ],
      "properties": {
        "action": {
          "description": "Action to perform upon creation (if any).",
          "type": "string"
        },
        "value": {
          "description": "Associated value for the action.",
          "type": "string"
        }
      }
    },
    "CreateDagResponse": {
      "type": "object",
      "required": [
        "DagID"
      ],
      "properties": {
        "DagID": {
          "type": "string"
        }
      }
    },
    "DAG": {
      "type": "object",
      "required": [
        "Group",
        "Name",
        "Schedule",
        "Description",
        "Params",
        "DefaultParams",
        "Tags"
      ],
      "properties": {
        "DefaultParams": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Group": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Params": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Schedule": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Schedule"
          }
        },
        "Tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DAGDetails": {
      "type": "object",
      "required": [
        "Location",
        "Group",
        "Name",
        "Schedule",
        "Description",
        "Env",
        "LogDir",
        "HandlerOn",
        "Steps",
        "Delay",
        "HistRetentionDays",
        "Preconditions",
        "MaxActiveRuns",
        "Params",
        "DefaultParams",
        "Tags"
      ],
      "properties": {
        "DefaultParams": {
          "type": "string"
        },
        "Delay": {
          "type": "integer"
        },
        "Description": {
          "type": "string"
        },
        "Env": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Group": {
          "type": "string"
        },
        "HandlerOn": {
          "$ref": "#/definitions/HandlerOn"
        },
        "HistRetentionDays": {
          "type": "integer"
        },
        "Location": {
          "type": "string"
        },
        "LogDir": {
          "type": "string"
        },
        "MaxActiveRuns": {
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Params": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Preconditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Condition"
          }
        },
        "Schedule": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Schedule"
          }
        },
        "Steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/stepObject"
          }
        },
        "Tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DAGLogData": {
      "type": "object",
      "required": [
        "GridData",
        "Logs"
      ],
      "properties": {
        "GridData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DAGLogGridItem"
          }
        },
        "Logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DAGLogStatusFile"
          }
        }
      }
    },
    "DAGLogGridItem": {
      "type": "object",
      "required": [
        "Name",
        "Vals"
      ],
      "properties": {
        "Name": {
          "type": "string"
        },
        "Vals": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "DAGLogStatusFile": {
      "type": "object",
      "required": [
        "File",
        "Status"
      ],
      "properties": {
        "File": {
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/DAGStatusDetails"
        }
      }
    },
    "DAGStatus": {
      "type": "object",
      "required": [
        "RequestId",
        "Name",
        "Status",
        "StatusText",
        "Pid",
        "StartedAt",
        "FinishedAt",
        "Log",
        "Params"
      ],
      "properties": {
        "FinishedAt": {
          "description": "Timestamp when the DAG finished.",
          "type": "string"
        },
        "Log": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Params": {
          "type": "string"
        },
        "Pid": {
          "type": "integer"
        },
        "RequestId": {
          "type": "string"
        },
        "StartedAt": {
          "description": "Timestamp when the DAG started.",
          "type": "string"
        },
        "Status": {
          "type": "integer"
        },
        "StatusText": {
          "type": "string"
        }
      }
    },
    "DAGStatusDetails": {
      "type": "object",
      "required": [
        "RequestId",
        "Name",
        "Status",
        "StatusText",
        "Pid",
        "Nodes",
        "OnExit",
        "OnSuccess",
        "OnFailure",
        "OnCancel",
        "StartedAt",
        "FinishedAt",
        "Log",
        "Params"
      ],
      "properties": {
        "FinishedAt": {
          "description": "Timestamp when the DAG finished.",
          "type": "string"
        },
        "Log": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Node"
          }
        },
        "OnCancel": {
          "$ref": "#/definitions/Node"
        },
        "OnExit": {
          "$ref": "#/definitions/Node"
        },
        "OnFailure": {
          "$ref": "#/definitions/Node"
        },
        "OnSuccess": {
          "$ref": "#/definitions/Node"
        },
        "Params": {
          "type": "string"
        },
        "Pid": {
          "type": "integer"
        },
        "RequestId": {
          "type": "string"
        },
        "StartedAt": {
          "description": "Timestamp when the DAG started.",
          "type": "string"
        },
        "Status": {
          "type": "integer"
        },
        "StatusText": {
          "type": "string"
        }
      }
    },
    "DAGStatusFile": {
      "type": "object",
      "required": [
        "File",
        "Dir",
        "DAG",
        "Status",
        "Suspended",
        "Error",
        "ErrorT"
      ],
      "properties": {
        "DAG": {
          "$ref": "#/definitions/DAG"
        },
        "Dir": {
          "type": "string"
        },
        "Error": {
          "type": "string"
        },
        "ErrorT": {
          "type": "string"
        },
        "File": {
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/DAGStatus"
        },
        "Suspended": {
          "type": "boolean"
        }
      }
    },
    "DAGStatusFileDetails": {
      "type": "object",
      "required": [
        "File",
        "Dir",
        "DAG",
        "Status",
        "Suspended",
        "Error",
        "ErrorT"
      ],
      "properties": {
        "DAG": {
          "$ref": "#/definitions/DAGDetails"
        },
        "Dir": {
          "type": "string"
        },
        "Error": {
          "type": "string"
        },
        "ErrorT": {
          "type": "string"
        },
        "File": {
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/DAGStatusDetails"
        },
        "Suspended": {
          "type": "boolean"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "validation_error",
            "not_found",
            "internal_error",
            "unauthorized",
            "bad_gateway"
          ]
        },
        "details": {
          "description": "Additional error details.",
          "type": "object"
        },
        "message": {
          "description": "Short error message.",
          "type": "string"
        }
      }
    },
    "GetDagDetailsResponse": {
      "type": "object",
      "required": [
        "Title",
        "DAG",
        "Tab",
        "Graph",
        "Definition",
        "LogData",
        "LogUrl",
        "StepLog",
        "ScLog",
        "Errors"
      ],
      "properties": {
        "DAG": {
          "$ref": "#/definitions/DAGStatusFileDetails"
        },
        "Definition": {
          "type": "string"
        },
        "Errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Graph": {
          "type": "string"
        },
        "LogData": {
          "$ref": "#/definitions/DAGLogData"
        },
        "LogUrl": {
          "type": "string"
        },
        "ScLog": {
          "$ref": "#/definitions/SchedulerLog"
        },
        "StepLog": {
          "$ref": "#/definitions/StepLog"
        },
        "Tab": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        }
      }
    },
    "HandlerOn": {
      "type": "object",
      "properties": {
        "Cancel": {
          "$ref": "#/definitions/stepObject"
        },
        "Exit": {
          "$ref": "#/definitions/stepObject"
        },
        "Failure": {
          "$ref": "#/definitions/stepObject"
        },
        "Success": {
          "$ref": "#/definitions/stepObject"
        }
      }
    },
    "ListDagsResponse": {
      "type": "object",
      "required": [
        "DAGs",
        "Errors",
        "HasError",
        "PageCount"
      ],
      "properties": {
        "DAGs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DAGStatusFile"
          }
        },
        "Errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "HasError": {
          "type": "boolean"
        },
        "PageCount": {
          "type": "integer"
        }
      }
    },
    "ListTagResponse": {
      "type": "object",
      "required": [
        "Tags",
        "Errors"
      ],
      "properties": {
        "Errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Node": {
      "type": "object",
      "required": [
        "Step",
        "Log",
        "StartedAt",
        "FinishedAt",
        "Status",
        "RetryCount",
        "DoneCount",
        "Error",
        "StatusText"
      ],
      "properties": {
        "DoneCount": {
          "type": "integer"
        },
        "Error": {
          "type": "string"
        },
        "FinishedAt": {
          "description": "Timestamp when the step finished.",
          "type": "string"
        },
        "Log": {
          "type": "string"
        },
        "RetryCount": {
          "type": "integer"
        },
        "StartedAt": {
          "description": "Timestamp when the step started.",
          "type": "string"
        },
        "Status": {
          "type": "integer"
        },
        "StatusText": {
          "type": "string"
        },
        "Step": {
          "$ref": "#/definitions/stepObject"
        }
      }
    },
    "PostDagActionRequest": {
      "description": "Request body for posting an action to a DAG.",
      "type": "object",
      "required": [
        "action"
      ],
      "properties": {
        "action": {
          "description": "Action to be performed on the DAG.",
          "type": "string",
          "enum": [
            "start",
            "suspend",
            "stop",
            "retry",
            "mark-success",
            "mark-failed",
            "save",
            "rename"
          ]
        },
        "params": {
          "description": "Additional parameters for the action.",
          "type": "string"
        },
        "requestId": {
          "description": "Unique request ID for the action.",
          "type": "string"
        },
        "step": {
          "description": "Step name if the action targets a specific step.",
          "type": "string"
        },
        "value": {
          "description": "Optional extra value for the action.",
          "type": "string"
        }
      }
    },
    "PostDagActionResponse": {
      "type": "object",
      "properties": {
        "NewDagID": {
          "description": "New DAG ID, if the action triggered a DAG rename or duplication.",
          "type": "string"
        }
      }
    },
    "RepeatPolicy": {
      "type": "object",
      "properties": {
        "Interval": {
          "type": "integer"
        },
        "Repeat": {
          "type": "boolean"
        }
      }
    },
    "Schedule": {
      "type": "object",
      "required": [
        "Expression"
      ],
      "properties": {
        "Expression": {
          "type": "string"
        }
      }
    },
    "SchedulerLog": {
      "type": "object",
      "required": [
        "LogFile",
        "Content"
      ],
      "properties": {
        "Content": {
          "type": "string"
        },
        "LogFile": {
          "type": "string"
        }
      }
    },
    "SearchDAGsMatchItem": {
      "type": "object",
      "properties": {
        "Line": {
          "type": "string"
        },
        "LineNumber": {
          "type": "integer"
        },
        "StartLine": {
          "type": "integer"
        }
      }
    },
    "SearchDAGsResponse": {
      "type": "object",
      "required": [
        "Results",
        "Errors"
      ],
      "properties": {
        "Errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchDAGsResultItem"
          }
        }
      }
    },
    "SearchDAGsResultItem": {
      "type": "object",
      "properties": {
        "DAG": {
          "$ref": "#/definitions/DAG"
        },
        "Matches": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchDAGsMatchItem"
          }
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "StepLog": {
      "type": "object",
      "required": [
        "Step",
        "LogFile",
        "Content"
      ],
      "properties": {
        "Content": {
          "type": "string"
        },
        "LogFile": {
          "type": "string"
        },
        "Step": {
          "$ref": "#/definitions/Node"
        }
      }
    },
    "stepObject": {
      "type": "object",
      "required": [
        "Name",
        "Description",
        "Variables",
        "Dir",
        "CmdWithArgs",
        "Command",
        "Script",
        "Stdout",
        "Stderr",
        "Output",
        "Args",
        "Depends",
        "RepeatPolicy",
        "MailOnError",
        "Preconditions"
      ],
      "properties": {
        "Args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CmdWithArgs": {
          "type": "string"
        },
        "Command": {
          "type": "string"
        },
        "Depends": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Description": {
          "type": "string"
        },
        "Dir": {
          "type": "string"
        },
        "MailOnError": {
          "type": "boolean"
        },
        "Name": {
          "type": "string"
        },
        "Output": {
          "type": "string"
        },
        "Params": {
          "type": "string"
        },
        "Preconditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Condition"
          }
        },
        "RepeatPolicy": {
          "$ref": "#/definitions/RepeatPolicy"
        },
        "Run": {
          "type": "string"
        },
        "Script": {
          "type": "string"
        },
        "Stderr": {
          "type": "string"
        },
        "Stdout": {
          "type": "string"
        },
        "Variables": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "tags": [
    {
      "description": "Operations about DAGs",
      "name": "dags"
    }
  ]
}`))
}

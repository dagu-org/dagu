// Code generated by go-swagger; DO NOT EDIT.

package dags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/dagu-org/dagu/internal/frontend/gen/models"
)

// CreateDAGOKCode is the HTTP code returned for type CreateDAGOK
const CreateDAGOKCode int = 200

/*
CreateDAGOK A successful response.

swagger:response createDAGOK
*/
type CreateDAGOK struct {

	/*
	  In: Body
	*/
	Payload *models.CreateDAGResponse `json:"body,omitempty"`
}

// NewCreateDAGOK creates CreateDAGOK with default headers values
func NewCreateDAGOK() *CreateDAGOK {

	return &CreateDAGOK{}
}

// WithPayload adds the payload to the create d a g o k response
func (o *CreateDAGOK) WithPayload(payload *models.CreateDAGResponse) *CreateDAGOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create d a g o k response
func (o *CreateDAGOK) SetPayload(payload *models.CreateDAGResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateDAGOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
CreateDAGDefault Generic error response.

swagger:response createDAGDefault
*/
type CreateDAGDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateDAGDefault creates CreateDAGDefault with default headers values
func NewCreateDAGDefault(code int) *CreateDAGDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateDAGDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create d a g default response
func (o *CreateDAGDefault) WithStatusCode(code int) *CreateDAGDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create d a g default response
func (o *CreateDAGDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the create d a g default response
func (o *CreateDAGDefault) WithPayload(payload *models.Error) *CreateDAGDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create d a g default response
func (o *CreateDAGDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateDAGDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

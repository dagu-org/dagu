// Code generated by go-swagger; DO NOT EDIT.

package dags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/dagu-org/dagu/internal/frontend/gen/models"
)

// ListTagsOKCode is the HTTP code returned for type ListTagsOK
const ListTagsOKCode int = 200

/*
ListTagsOK A successful response.

swagger:response listTagsOK
*/
type ListTagsOK struct {

	/*
	  In: Body
	*/
	Payload *models.ListTagResponse `json:"body,omitempty"`
}

// NewListTagsOK creates ListTagsOK with default headers values
func NewListTagsOK() *ListTagsOK {

	return &ListTagsOK{}
}

// WithPayload adds the payload to the list tags o k response
func (o *ListTagsOK) WithPayload(payload *models.ListTagResponse) *ListTagsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list tags o k response
func (o *ListTagsOK) SetPayload(payload *models.ListTagResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListTagsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
ListTagsDefault Generic error response.

swagger:response listTagsDefault
*/
type ListTagsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewListTagsDefault creates ListTagsDefault with default headers values
func NewListTagsDefault(code int) *ListTagsDefault {
	if code <= 0 {
		code = 500
	}

	return &ListTagsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the list tags default response
func (o *ListTagsDefault) WithStatusCode(code int) *ListTagsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the list tags default response
func (o *ListTagsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the list tags default response
func (o *ListTagsDefault) WithPayload(payload *models.APIError) *ListTagsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list tags default response
func (o *ListTagsDefault) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListTagsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

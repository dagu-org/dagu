// Code generated by go-swagger; DO NOT EDIT.

package dags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ListDagsHandlerFunc turns a function with the right signature into a list dags handler
type ListDagsHandlerFunc func(ListDagsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListDagsHandlerFunc) Handle(params ListDagsParams) middleware.Responder {
	return fn(params)
}

// ListDagsHandler interface for that can handle valid list dags params
type ListDagsHandler interface {
	Handle(ListDagsParams) middleware.Responder
}

// NewListDags creates a new http.Handler for the list dags operation
func NewListDags(ctx *middleware.Context, handler ListDagsHandler) *ListDags {
	return &ListDags{Context: ctx, Handler: handler}
}

/*
	ListDags swagger:route GET /dags dags listDags

# List all DAGs

Returns a list of DAGs with optional pagination and search filters.
*/
type ListDags struct {
	Context *middleware.Context
	Handler ListDagsHandler
}

func (o *ListDags) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewListDagsParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// Code generated by go-swagger; DO NOT EDIT.

package dags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/dagu-org/dagu/internal/frontend/gen/models"
)

// PostDAGActionOKCode is the HTTP code returned for type PostDAGActionOK
const PostDAGActionOKCode int = 200

/*
PostDAGActionOK A successful response

swagger:response postDAGActionOK
*/
type PostDAGActionOK struct {

	/*
	  In: Body
	*/
	Payload *models.PostDAGActionResponse `json:"body,omitempty"`
}

// NewPostDAGActionOK creates PostDAGActionOK with default headers values
func NewPostDAGActionOK() *PostDAGActionOK {

	return &PostDAGActionOK{}
}

// WithPayload adds the payload to the post d a g action o k response
func (o *PostDAGActionOK) WithPayload(payload *models.PostDAGActionResponse) *PostDAGActionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post d a g action o k response
func (o *PostDAGActionOK) SetPayload(payload *models.PostDAGActionResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostDAGActionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostDAGActionBadRequestCode is the HTTP code returned for type PostDAGActionBadRequest
const PostDAGActionBadRequestCode int = 400

/*
PostDAGActionBadRequest Invalid action requested

swagger:response postDAGActionBadRequest
*/
type PostDAGActionBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostDAGActionBadRequest creates PostDAGActionBadRequest with default headers values
func NewPostDAGActionBadRequest() *PostDAGActionBadRequest {

	return &PostDAGActionBadRequest{}
}

// WithPayload adds the payload to the post d a g action bad request response
func (o *PostDAGActionBadRequest) WithPayload(payload *models.Error) *PostDAGActionBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post d a g action bad request response
func (o *PostDAGActionBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostDAGActionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostDAGActionNotFoundCode is the HTTP code returned for type PostDAGActionNotFound
const PostDAGActionNotFoundCode int = 404

/*
PostDAGActionNotFound DAG not found

swagger:response postDAGActionNotFound
*/
type PostDAGActionNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostDAGActionNotFound creates PostDAGActionNotFound with default headers values
func NewPostDAGActionNotFound() *PostDAGActionNotFound {

	return &PostDAGActionNotFound{}
}

// WithPayload adds the payload to the post d a g action not found response
func (o *PostDAGActionNotFound) WithPayload(payload *models.Error) *PostDAGActionNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post d a g action not found response
func (o *PostDAGActionNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostDAGActionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
PostDAGActionDefault Generic error response

swagger:response postDAGActionDefault
*/
type PostDAGActionDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostDAGActionDefault creates PostDAGActionDefault with default headers values
func NewPostDAGActionDefault(code int) *PostDAGActionDefault {
	if code <= 0 {
		code = 500
	}

	return &PostDAGActionDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post d a g action default response
func (o *PostDAGActionDefault) WithStatusCode(code int) *PostDAGActionDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post d a g action default response
func (o *PostDAGActionDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post d a g action default response
func (o *PostDAGActionDefault) WithPayload(payload *models.Error) *PostDAGActionDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post d a g action default response
func (o *PostDAGActionDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostDAGActionDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

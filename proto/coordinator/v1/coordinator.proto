syntax = "proto3";

package coordinator.v1;

// protolint:disable:next MAX_LINE_LENGTH
option go_package = "github.com/dagu-org/dagu/proto/coordinator/v1;coordinatorv1";


// Service definition for Coordinator Service.
service CoordinatorService {
  // Poll is called by workers to process a task.
  rpc Poll (PollRequest) returns (PollResponse);
  // Dispatch is called to dispatch a task to a worker.
  rpc Dispatch (DispatchRequest) returns (DispatchResponse);
}

// Request message for polling a task.
message PollRequest {
  string worker_id = 1;
  string poller_id = 2; // Unique ID for this poll request
  map<string, string> labels = 3; // Worker labels for task matching
}

// Response message for polling a task.
message PollResponse {
  Task task = 1; // The task to process.
}

// Request message for dispatching a task.
message DispatchRequest {
  Task task = 1;
}

// Response message for dispatching a task.
message DispatchResponse {
  // No field
}

// Task to process.
message Task {
  Operation operation = 6;
  string root_dag_run_name = 1;
  string root_dag_run_id = 2;
  string parent_dag_run_name = 3;
  string parent_dag_run_id = 4;
  string dag_run_id = 5;
  string target = 7; // DAG name or path
  string params = 8; // Optional: parameters
  string step = 9;   // Optional: specific step (for RETRY)
  map<string, string> worker_selector = 10; // Required worker labels for execution
  string definition = 11; // Optional: DAG definition (YAML) for local DAGs
}

enum Operation {
  OPERATION_UNSPECIFIED = 0;
  OPERATION_START = 1;    // Start a new DAG run
  OPERATION_RETRY = 2;    // Retry an existing run
}
